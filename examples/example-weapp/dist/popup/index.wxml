<wxs src="../common/utils/wxs/namespace.wxs" module="namespace" />
<wxs src="./index.wxs" module="utils" />

<!-- <template name="popupContentBox">
  <view class="{{ namespace.join('popup-box') }} ext-class" style="{{ extStyle }}">
    <ti-safe-area wx:if="{{ position == EPosition.TOP && safeArea }}" position="top" />
    <slot />
    <ti-safe-area wx:if="{{ position == EPosition.BOTTOM && safeArea }}" position="bottom" />
  </view>
</template> -->
<!-- ext-class在template使用，在支付宝渠道无效果 -->

<ti-transition
  wx:if="{{ preventScroll }}"
  prevent-scroll="{{ preventScroll }}"
  catch:touchmove="noop"
  ext-style="z-index: {{ maskZIndex }}; {{ extMaskStyle }}; "
  ext-class="{{ namespace.join('popup-mask') }} ext-mask-class"
  enter-done-class="{{ namespace.join('popup-enter-done') }}"
  exit-class="{{ namespace.join('popup-enter-done') }}"
  show="{{ hasMask && visible }}"
  destroy-on-exit="{{ destroyOnClose }}"
  bind:tap="onTapMask"
  timeout="{{ utils.computedTimeOut(timeout) }}"
  name="fade"
/>

<ti-transition
  wx:else
  ext-style="z-index: {{ maskZIndex }}; {{ extMaskStyle }}; "
  ext-class="{{ namespace.join('popup-mask') }} ext-mask-class"
  enter-done-class="{{ namespace.join('popup-enter-done') }}"
  exit-class="{{ namespace.join('popup-enter-done') }}"
  show="{{ hasMask && visible }}"
  destroy-on-exit="{{ destroyOnClose }}"
  bind:tap="onTapMask"
  timeout="{{ utils.computedTimeOut(timeout) }}"
  name="fade"
/>

<ti-transition
  wx:if="{{ preventScroll }}"
  catch:touchmove="noop"
  show="{{ visible }}"
  name="{{ '' }}"
  timing-function="{{ '' }}"
  destroy-on-exit="{{ destroyOnClose }}"
  ext-class="ext-content-class {{ namespace.join('popup', [ utils.computedPositionClass(position, transitionClass) ]) }}"
  ext-style="{{ utils.computedContentStyle(contentZIndex, radius, extContentStyle, timeout) }}"
  timeout="{{ utils.computedTimeOut(timeout) }}"
  bind:enter="onEnter"
  bind:entered="onEntered"
  bind:exit="onExit"
  bind:exited="onExited"
  enter-class="{{ namespace.join('popup',[transitionClass+'-start' ]) }}"
  enter-done-class="{{ namespace.join('popup',[transitionClass+'-middle' ]) }}"
  enter-active-class="{{ namespace.join('popup',[transitionClass+'-start-active' ]) }}"
  exit-class="{{ namespace.join('popup',[transitionClass+'-middle' ]) }}"
  exit-done-class="{{ namespace.join('popup',[transitionClass+'-end' ]) }}"
  exit-active-class="{{ namespace.join('popup',[transitionClass+'-end-active' ]) }}"
>
  <!-- <template is="popupContentBox" data="{{ position, extStyle, safeArea, EPosition }}" /> -->
  <view class="{{ namespace.join('popup-box') }} ext-class" style="{{ extStyle }}">
    <ti-safe-area wx:if="{{ position == EPosition.TOP && safeArea }}" position="top" />
    <slot />
    <ti-safe-area wx:if="{{ position == EPosition.BOTTOM && safeArea }}" position="bottom" />
  </view>
</ti-transition>

<ti-transition
  wx:else
  show="{{ visible }}"
  name="{{ '' }}"
  timing-function="{{ '' }}"
  destroy-on-exit="{{ destroyOnClose }}"
  ext-class="ext-content-class {{ namespace.join('popup', [ utils.computedPositionClass(position, transitionClass) ]) }}"
  ext-style="{{ utils.computedContentStyle(contentZIndex, radius, extContentStyle, timeout) }}"
  timeout="{{ utils.computedTimeOut(timeout) }}"
  enter-class="{{ namespace.join('popup',[transitionClass+'-start' ]) }}"
  enter-done-class="{{ namespace.join('popup',[transitionClass+'-middle' ]) }}"
  enter-active-class="{{ namespace.join('popup',[transitionClass+'-start-active' ]) }}"
  exit-class="{{ namespace.join('popup',[transitionClass+'-middle' ]) }}"
  exit-done-class="{{ namespace.join('popup',[transitionClass+'-end' ]) }}"
  exit-active-classd="{{ namespace.join('popup',[transitionClass+'-end-active' ]) }}"
  bind:enter="onEnter"
  bind:entered="onEntered"
  bind:exit="onExit"
  bind:exited="onExited"
>
  <!-- <template is="popupContentBox" data="{{ position, extStyle, safeArea, EPosition }}" /> -->
  <view class="{{ namespace.join('popup-box') }} ext-class" style="{{ extStyle }}">
    <ti-safe-area wx:if="{{ position == EPosition.TOP && safeArea }}" position="top" />
    <slot />
    <ti-safe-area wx:if="{{ position == EPosition.BOTTOM && safeArea }}" position="bottom" />
  </view>
</ti-transition>

